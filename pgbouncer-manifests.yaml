apiVersion: v1
kind: Secret
metadata:
  name: pgbouncer-${cluster_name}-secret
  namespace: ${namespace}
type: Opaque
stringData:
  DB_HOST: ${postgres_host}
  DB_PORT: ${postgres_port}
  DB_USER: ${postgres_username}
  DB_PASSWORD: ${postgres_password}
  DB_NAME: ${postgres_database}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgbouncer-${cluster_name}
  namespace: ${namespace}
  labels:
    app.kubernetes.io/name: pgbouncer
    app.kubernetes.io/instance: pgbouncer-${cluster_name}
    app.kubernetes.io/component: connection-pooler
    app.kubernetes.io/part-of: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pgbouncer
      app.kubernetes.io/instance: pgbouncer-${cluster_name}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pgbouncer
        app.kubernetes.io/instance: pgbouncer-${cluster_name}
        app.kubernetes.io/component: connection-pooler
        app.kubernetes.io/part-of: postgresql
    spec:
      containers:
      - name: pgbouncer
        image: edoburu/pgbouncer:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: pgbouncer
          containerPort: 5432
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
          successThreshold: 1
        readinessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
          successThreshold: 1
        resources:
          limits:
            memory: ${pgbouncer_limits_memory}
            cpu: ${pgbouncer_limits_cpu}
          requests:
            memory: ${pgbouncer_requests_memory}
            cpu: ${pgbouncer_requests_cpu}
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: pgbouncer-${cluster_name}-secret
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: pgbouncer-${cluster_name}-secret
              key: DB_PORT
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: pgbouncer-${cluster_name}-secret
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pgbouncer-${cluster_name}-secret
              key: DB_PASSWORD
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: pgbouncer-${cluster_name}-secret
              key: DB_NAME
        - name: POOL_MODE
          value: "${pool_mode}"
        - name: MAX_CLIENT_CONN
          value: "${max_client_conn}"
        - name: DEFAULT_POOL_SIZE
          value: "${default_pool_size}"
        - name: ADMIN_USERS
          value: "${admin_users}"
        - name: STATS_USERS
          value: "${stats_users}"
        - name: AUTH_TYPE
          value: "scram-sha-256"
        volumeMounts:
        - name: pgbouncer-log
          mountPath: /var/log
      volumes:
      - name: pgbouncer-log
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: pgbouncer-${cluster_name}
  namespace: ${namespace}
  labels:
    app.kubernetes.io/name: pgbouncer
    app.kubernetes.io/instance: pgbouncer-${cluster_name}
    app.kubernetes.io/component: connection-pooler
    app.kubernetes.io/part-of: postgresql
spec:
  type: ClusterIP
  ports:
  - name: pgbouncer
    port: 5432
    targetPort: pgbouncer
    protocol: TCP
  selector:
    app.kubernetes.io/name: pgbouncer
    app.kubernetes.io/instance: pgbouncer-${cluster_name}